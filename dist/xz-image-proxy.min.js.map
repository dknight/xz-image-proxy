{
  "version": 3,
  "sources": ["xz-image-proxy.js"],
  "sourcesContent": ["/**\n * XZImageProxy is a framework-agnostic web component to show image helper\n * for layout. More details on https://www.github.com/dknight/xz-image-proxy\n *\n * @author Dmitri Smirnov <https://www.whoop.ee/>\n * @license MIT 2023\n * @version 1.0.0\n * @extends HTMLElement\n *\n * @property {string} [width=\"100%\"] Width of the image.\n * @property {string} [height=\"100%\"] Height of the image\n *\n * @example\n * <xz-image-proxy width=\"100%\" height=\"50%\"></xz-image-proxy>\n */\nclass XZImageProxy extends HTMLElement {\n  /**\n   * Tag name\n   * @type {string}\n   */\n  static TAG_NAME = 'xz-image-proxy';\n\n  /**\n   * Observed attributes for web-component.\n   */\n  static observedAttributes = ['width', 'height'];\n\n  #resizeObserver = null;\n  #styleElem = document.createElement('style');\n  #span = document.createElement('span');\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.width = '100%';\n    this.height = '100%';\n    this.root = this.attachShadow({mode: 'open'});\n    this.root.append(this.#styleElem, this.#span);\n    this.#styleElem.textContent = `:host{--w: 100%;--h: 100%;width:var(--w);height:var(--h);background:#d3d3d3;font: 1.5em sans-serif;color:#666;display:inline-flex;align-items:center;justify-content:center}`;\n  }\n\n  /**\n   * Parses the width or height, if it hasn't any units then assumed that\n   * these are pixels.\n   * @param {number|string} size\n   * @return {string}\n   */\n  #parseSize = (size) => {\n    let str = String(size);\n    if (str.match(/^-?[0-9]+$/)) {\n      str += 'px';\n    }\n    return str;\n  };\n\n  /**\n   * Draws size and a11y for proxy.\n   */\n  #draw = () => {\n    const [w, h] = [Number.parseInt(this.width), Number.parseInt(this.height)];\n    this.#span.textContent = `${w}\u00D7${h}`;\n    this.setAttribute('aria-label', `Image proxy ${w}\u00D7${h}`);\n  };\n\n  /**\n * @inheritDoc\n */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) {\n      return;\n    }\n    const v = this.#parseSize(newValue);\n    switch (name) {\n      case 'width':\n        this.style.setProperty('--w', v);\n        this.width = v;\n        break;\n      case 'height':\n        this.style.setProperty('--h', v);\n        this.height = v;\n        break;\n    }\n    this.#draw();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  connectedCallback() {\n    this.setAttribute('role', 'img');\n    this.#resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        if (entry.contentRect) {\n          this.width = entry.contentRect.width;\n          this.height = entry.contentRect.height;\n          this.#draw();\n        }\n      }\n    });\n    this.#resizeObserver.observe(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disconnectedCallback() {\n    this.#resizeObserver.disconnect();\n  }\n}\n\ncustomElements.define(XZImageProxy.TAG_NAME, XZImageProxy);\n\nexport default XZImageProxy;\n"],
  "mappings": ";AAeA,MAAMA,UAAqB,WAAY,CAKrC,OAAO,SAAW,iBAKlB,OAAO,mBAAqB,CAAC,QAAS,QAAQ,EAE9CC,GAAkB,KAClBC,GAAa,SAAS,cAAc,OAAO,EAC3CC,GAAQ,SAAS,cAAc,MAAM,EAKrC,aAAc,CACZ,MAAM,EACN,KAAK,MAAQ,OACb,KAAK,OAAS,OACd,KAAK,KAAO,KAAK,aAAa,CAAC,KAAM,MAAM,CAAC,EAC5C,KAAK,KAAK,OAAO,KAAKD,GAAY,KAAKC,EAAK,EAC5C,KAAKD,GAAW,YAAc,8KAChC,CAQAE,GAAcC,GAAS,CACrB,IAAIC,EAAM,OAAOD,CAAI,EACrB,OAAIC,EAAI,MAAM,YAAY,IACxBA,GAAO,MAEFA,CACT,EAKAC,GAAQ,IAAM,CACZ,KAAM,CAACC,EAAGC,CAAC,EAAI,CAAC,OAAO,SAAS,KAAK,KAAK,EAAG,OAAO,SAAS,KAAK,MAAM,CAAC,EACzE,KAAKN,GAAM,YAAc,GAAGK,QAAKC,IACjC,KAAK,aAAa,aAAc,eAAeD,QAAKC,GAAG,CACzD,EAKA,yBAAyBC,EAAMC,EAAUC,EAAU,CACjD,GAAID,IAAaC,EACf,OAEF,MAAMC,EAAI,KAAKT,GAAWQ,CAAQ,EAClC,OAAQF,EAAM,CACZ,IAAK,QACH,KAAK,MAAM,YAAY,MAAOG,CAAC,EAC/B,KAAK,MAAQA,EACb,MACF,IAAK,SACH,KAAK,MAAM,YAAY,MAAOA,CAAC,EAC/B,KAAK,OAASA,EACd,KACJ,CACA,KAAKN,GAAM,CACb,CAKA,mBAAoB,CAClB,KAAK,aAAa,OAAQ,KAAK,EAC/B,KAAKN,GAAkB,IAAI,eAAgBa,GAAY,CACrD,UAAWC,KAASD,EACdC,EAAM,cACR,KAAK,MAAQA,EAAM,YAAY,MAC/B,KAAK,OAASA,EAAM,YAAY,OAChC,KAAKR,GAAM,EAGjB,CAAC,EACD,KAAKN,GAAgB,QAAQ,IAAI,CACnC,CAKA,sBAAuB,CACrB,KAAKA,GAAgB,WAAW,CAClC,CACF,CAEA,eAAe,OAAOD,EAAa,SAAUA,CAAY,EAEzD,eAAeA",
  "names": ["XZImageProxy", "#resizeObserver", "#styleElem", "#span", "#parseSize", "size", "str", "#draw", "w", "h", "name", "oldValue", "newValue", "v", "entries", "entry"]
}
