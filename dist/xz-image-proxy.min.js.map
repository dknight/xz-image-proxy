{
  "version": 3,
  "sources": ["xz-image-proxy.js"],
  "sourcesContent": ["\"use strict\";\n/**\n * XZImageProxy is a framework-agnostic web component to show image helper\n * for layout. More details on https://www.github.com/dknight/xz-image-proxy\n *\n * @author Dmitri Smirnov <https://www.whoop.ee/>\n * @license MIT 2023\n * @version 1.0.0\n * @extends HTMLElement\n *\n * @property {string} [width=\"100%\"] Width of the image.\n * @property {string} [height=\"100%\"] Height of the image\n *\n * @example\n * <xz-image-proxy width=\"100%\" height=\"50%\"></xz-image-proxy>\n */\nclass XZImageProxy extends HTMLElement {\n  constructor(root, styleElem, span, resizeObserver, width = \"100%\", height = \"100%\") {\n    super();\n    this.root = root;\n    this.styleElem = styleElem;\n    this.span = span;\n    this.resizeObserver = resizeObserver;\n    this.width = width;\n    this.height = height;\n    /**\n     * Parses the width or height, if it hasn't any units then assumed that\n     * these are pixels.\n     */\n    this.parseSize = (size) => {\n      let str = String(size);\n      if (str.match(/^-?[0-9]+$/)) {\n        str += \"px\";\n      }\n      return str;\n    };\n    /**\n     * Draws size and a11y for proxy.\n     */\n    this.draw = () => {\n      const [w, h] = [Number.parseInt(this.width), Number.parseInt(this.height)];\n      this.span.textContent = `${w}\\xD7${h}`;\n      this.setAttribute(\"aria-label\", `Image proxy ${w}\\xD7${h}`);\n    };\n    this.span = document.createElement(\"span\");\n    this.styleElem = document.createElement(\"style\");\n    this.styleElem.textContent = `:host{--w: 100%;--h: 100%;width:var(--w);height:var(--h);background:#d3d3d3;font: 1.5em sans-serif;color:#666;display:inline-flex;align-items:center;justify-content:center}`;\n    this.root = this.attachShadow({ mode: \"open\" });\n    this.root.append(this.styleElem, this.span);\n  }\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) {\n      return;\n    }\n    const v = this.parseSize(newValue);\n    switch (name) {\n      case \"width\":\n        this.style.setProperty(\"--w\", v);\n        this.width = v;\n        break;\n      case \"height\":\n        this.style.setProperty(\"--h\", v);\n        this.height = v;\n        break;\n    }\n    this.draw();\n  }\n  connectedCallback() {\n    this.setAttribute(\"role\", \"img\");\n    this.resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        if (entry.contentRect) {\n          this.width = `${entry.contentRect.width}px`;\n          this.height = `${entry.contentRect.height}px`;\n          this.draw();\n        }\n      }\n    });\n    this.resizeObserver.observe(this);\n  }\n  /**\n   * @inheritDoc\n   */\n  disconnectedCallback() {\n    this.resizeObserver.disconnect();\n  }\n}\n/**\n * Tag name\n */\nXZImageProxy.TAG_NAME = \"xz-image-proxy\";\n/**\n * Observed attributes for web-component.\n */\nXZImageProxy.observedAttributes = [\"width\", \"height\"];\ncustomElements.define(XZImageProxy.TAG_NAME, XZImageProxy);\nexport default XZImageProxy;\n"],
  "mappings": ";aAgBA,MAAMA,UAAqB,WAAY,CACrC,YAAYC,EAAMC,EAAWC,EAAMC,EAAgBC,EAAQ,OAAQC,EAAS,OAAQ,CAClF,MAAM,EACN,KAAK,KAAOL,EACZ,KAAK,UAAYC,EACjB,KAAK,KAAOC,EACZ,KAAK,eAAiBC,EACtB,KAAK,MAAQC,EACb,KAAK,OAASC,EAKd,KAAK,UAAaC,GAAS,CACzB,IAAIC,EAAM,OAAOD,CAAI,EACrB,OAAIC,EAAI,MAAM,YAAY,IACxBA,GAAO,MAEFA,CACT,EAIA,KAAK,KAAO,IAAM,CAChB,KAAM,CAACC,EAAGC,CAAC,EAAI,CAAC,OAAO,SAAS,KAAK,KAAK,EAAG,OAAO,SAAS,KAAK,MAAM,CAAC,EACzE,KAAK,KAAK,YAAc,GAAGD,QAAQC,IACnC,KAAK,aAAa,aAAc,eAAeD,QAAQC,GAAG,CAC5D,EACA,KAAK,KAAO,SAAS,cAAc,MAAM,EACzC,KAAK,UAAY,SAAS,cAAc,OAAO,EAC/C,KAAK,UAAU,YAAc,+KAC7B,KAAK,KAAO,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EAC9C,KAAK,KAAK,OAAO,KAAK,UAAW,KAAK,IAAI,CAC5C,CACA,yBAAyBC,EAAMC,EAAUC,EAAU,CACjD,GAAID,IAAaC,EACf,OAEF,MAAMC,EAAI,KAAK,UAAUD,CAAQ,EACjC,OAAQF,EAAM,CACZ,IAAK,QACH,KAAK,MAAM,YAAY,MAAOG,CAAC,EAC/B,KAAK,MAAQA,EACb,MACF,IAAK,SACH,KAAK,MAAM,YAAY,MAAOA,CAAC,EAC/B,KAAK,OAASA,EACd,KACJ,CACA,KAAK,KAAK,CACZ,CACA,mBAAoB,CAClB,KAAK,aAAa,OAAQ,KAAK,EAC/B,KAAK,eAAiB,IAAI,eAAgBC,GAAY,CACpD,UAAWC,KAASD,EACdC,EAAM,cACR,KAAK,MAAQ,GAAGA,EAAM,YAAY,UAClC,KAAK,OAAS,GAAGA,EAAM,YAAY,WACnC,KAAK,KAAK,EAGhB,CAAC,EACD,KAAK,eAAe,QAAQ,IAAI,CAClC,CAIA,sBAAuB,CACrB,KAAK,eAAe,WAAW,CACjC,CACF,CAIAhB,EAAa,SAAW,iBAIxBA,EAAa,mBAAqB,CAAC,QAAS,QAAQ,EACpD,eAAe,OAAOA,EAAa,SAAUA,CAAY,EACzD,eAAeA",
  "names": ["XZImageProxy", "root", "styleElem", "span", "resizeObserver", "width", "height", "size", "str", "w", "h", "name", "oldValue", "newValue", "v", "entries", "entry"]
}
